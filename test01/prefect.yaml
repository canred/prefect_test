# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: PrefectFlow
prefect-version: 3.4.10

# build section allows you to manage and build docker images
build: null

# push section allows you to manage if and how this project is uploaded to remote locations
push:
- prefect.deployments.steps.run_shell_script:
    script: |
      echo "Pushing project files to remote repository..."
      git add .
      git commit -m "Update deployment files - $(date)"
      git push -u origin main
    stream_output: true

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
# - prefect.deployments.steps.set_working_directory:
#     directory: d:\GitHub\prefect_test\test01
- prefect.deployments.steps.git_clone:
    repository: https://github.com/canred/prefect-flow-test1.git
    branch: main
- prefect.deployments.steps.pip_install_requirements:
    requirements_file: requirements.txt
    stream_output: true

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: my_flow
  version: null
  tags: []
  description: "Redis File Processing Flow"
  entrypoint: flows/my_flow_working.py:redis_file_processing_flow
  parameters: {}
  work_pool:
    name: default_work
    job_variables: 
      REDIS_HOST: "localhost"
      REDIS_PORT: "6379"
      REDIS_DB: "0"
      DISK_PATH: "E:/"
      FILTER_RULE: ".zip"
      SOURCE_SERVER: "pc10714"
      TARGET_SERVER: "pc10714new"
      TARGET_FOLDER: "d:/new_folder"
      
      PYTHONIOENCODING: "utf-8"
      PYTHONLEGACYWINDOWSSTDIO: "utf-8"
  schedule: null
